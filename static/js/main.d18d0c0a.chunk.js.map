{"version":3,"sources":["components/CheckboxTrunfo.js","components/Form.js","components/DeleteBtn.js","components/Card.js","components/Footer.js","App.js","index.js"],"names":["CheckboxTrunfo","hasTrunfo","cardTrunfo","onInputChange","className","htmlFor","name","type","checked","onChange","Form","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","isSaveButtonDisabled","onSaveButtonClick","maxLength","value","placeholder","disabled","onClick","React","Component","DeleteBtn","onDeleteButtonClick","Card","noDeleteBtn","src","alt","Footer","stateDefault","App","checkFieldsNoEmpty","state","checkValueAttrs","Number","enableSaveButton","setState","target","cardsSaves","othersStates","prevState","cardToDel","newState","filter","card","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d18d0c0a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function CheckboxTrunfo({ hasTrunfo, cardTrunfo, onInputChange }) {\n  return (\n    <div className=\"form-label\">\n      {\n        hasTrunfo\n          ? (\n            <span\n              className=\"alert alert-warning\"\n            >\n              Você já tem um Super Trunfo em seu baralho\n\n            </span>\n          )\n          : (\n            <label htmlFor=\"cardTrunfo\" className=\"form-check-label\">\n              Super Trunfo\n              <input\n                name=\"cardTrunfo\"\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                data-testid=\"trunfo-input\"\n                checked={ cardTrunfo }\n                onChange={ onInputChange }\n              />\n            </label>\n          )\n      }\n    </div>\n  );\n}\n\nCheckboxTrunfo.propTypes = {\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckboxTrunfo from './CheckboxTrunfo';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick,\n    } = this.props;\n\n    return (\n      <form className=\"form\">\n        <div className=\"item-form\">\n          <label htmlFor=\"cardName\" className=\"form-label\">\n            Nome da carta:\n            <input\n              name=\"cardName\"\n              className=\"form-control\"\n              type=\"text\"\n              maxLength={ 20 }\n              data-testid=\"name-input\"\n              onChange={ onInputChange }\n              value={ cardName }\n            />\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <label htmlFor=\"cardDescription\" className=\"form-label\">\n            Descrição da carta:\n            <textarea\n              name=\"cardDescription\"\n              className=\"form-control\"\n              maxLength={ 60 }\n              data-testid=\"description-input\"\n              value={ cardDescription }\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <label htmlFor=\"cardAttr1\" className=\"form-label\">\n            Primeiro atributo:\n            <input\n              name=\"cardAttr1\"\n              className=\"form-control\"\n              type=\"number\"\n              data-testid=\"attr1-input\"\n              value={ cardAttr1 }\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <label htmlFor=\"cardAttr2\" className=\"form-label\">\n            Segundo atributo:\n            <input\n              name=\"cardAttr2\"\n              className=\"form-control\"\n              type=\"number\"\n              data-testid=\"attr2-input\"\n              value={ cardAttr2 }\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <label htmlFor=\"cardAttr3\" className=\"form-label\">\n            Terceiro atributo:\n            <input\n              name=\"cardAttr3\"\n              className=\"form-control\"\n              type=\"number\"\n              data-testid=\"attr3-input\"\n              value={ cardAttr3 }\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"alert-attr\">\n          <p>\n            Os atributos devem conter um valor entre 0 - 90\n            e a soma dos três valores não deve ultrapassar 210\n          </p>\n        </div>\n        <div className=\"item-form input-group\">\n          <label htmlFor=\"cardImage\" className=\"form-label input-group-text\">\n            Insira uma imagem:\n            <input\n              name=\"cardImage\"\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Cole a URL de uma imagem válida\"\n              data-testid=\"image-input\"\n              value={ cardImage }\n              onChange={ onInputChange }\n            />\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <label htmlFor=\"cardRare\" className=\"form-label\">\n            Raridade\n            <select\n              name=\"cardRare\"\n              className=\"form-select form-control\"\n              data-testid=\"rare-input\"\n              value={ cardRare }\n              onChange={ onInputChange }\n            >\n              <option value=\"normal\">Normal</option>\n              <option value=\"raro\">Raro</option>\n              <option value=\"muito raro\">Muito Raro</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"item-form\">\n          <CheckboxTrunfo\n            hasTrunfo={ hasTrunfo }\n            cardTrunfo={ cardTrunfo }\n            onInputChange={ onInputChange }\n          />\n        </div>\n        <div className=\"item-form\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-testid=\"save-button\"\n            value=\"Salvar\"\n            disabled={ isSaveButtonDisabled }\n            onClick={ onSaveButtonClick }\n          >\n            Salvar\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.number.isRequired,\n  cardAttr2: PropTypes.number.isRequired,\n  cardAttr3: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function DeleteBtn({ onDeleteButtonClick }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-danger\"\n      data-testid=\"delete-button\"\n      onClick={ onDeleteButtonClick }\n    >\n      Excluir\n    </button>\n  );\n}\n\nDeleteBtn.propTypes = {\n  onDeleteButtonClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteBtn from './DeleteBtn';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      noDeleteBtn,\n      onDeleteButtonClick,\n    } = this.props;\n\n    const noImage = 'https://www.unialfa.com.br/tudounialfa/img/semfoto.png';\n\n    return (\n      <div className=\"container-card\">\n        <div className=\"my-card\">\n          <h2 className=\"card-name\" data-testid=\"name-card\">{ cardName || 'Nome'}</h2>\n          <div className=\"container-img\">\n            <img\n              src={ cardImage || noImage }\n              className=\"card-img-top\"\n              alt={ cardName }\n              data-testid=\"image-card\"\n            />\n            {\n              cardTrunfo\n              && (\n                <span\n                  className=\"super-trunfo\"\n                  data-testid=\"trunfo-card\"\n                >\n                  Super Trunfo\n\n                </span>)\n            }\n          </div>\n          <div>\n            <div className=\"card-description\">\n              <p data-testid=\"description-card\">\n                { cardDescription || 'Descrição da carta' }\n\n              </p>\n            </div>\n            <div className=\"attr\">\n              <p>OVR</p>\n              <p data-testid=\"attr1-card\">{ cardAttr1 }</p>\n            </div>\n            <div className=\"attr\">\n              <p>ATA</p>\n              <p data-testid=\"attr2-card\">{ cardAttr2 }</p>\n            </div>\n            <div className=\"attr\">\n              <p>DEF</p>\n              <p data-testid=\"attr3-card\">{ cardAttr3 }</p>\n            </div>\n            <p className=\"rarity\" data-testid=\"rare-card\">{ cardRare }</p>\n          </div>\n          { noDeleteBtn\n            ? null : <DeleteBtn onDeleteButtonClick={ onDeleteButtonClick } /> }\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.number.isRequired,\n  cardAttr2: PropTypes.number.isRequired,\n  cardAttr3: PropTypes.number.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  noDeleteBtn: PropTypes.bool.isRequired,\n  onDeleteButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      Anderson Alencar, 2021. ;D\n    </div>\n  );\n}\n","import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './components/Footer';\n\nconst stateDefault = {\n  cardName: '',\n  cardDescription: '',\n  cardAttr1: 0,\n  cardAttr2: 0,\n  cardAttr3: 0,\n  cardImage: '',\n  cardRare: 'normal',\n  cardTrunfo: false,\n  noDeleteBtn: true,\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...stateDefault,\n      isSaveButtonDisabled: true,\n      hasTrunfo: false,\n      cardsSaves: [],\n    };\n  }\n\n  checkFieldsNoEmpty = () => {\n    const { cardName, cardDescription, cardImage, cardRare } = this.state;\n\n    if (cardName === ''\n      || cardDescription === ''\n      || cardImage === ''\n      || cardRare === ''\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  checkValueAttrs = () => {\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n\n    const sum = 210;\n    const maxPoints = 90;\n    const minPoints = 0;\n\n    if (Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3) > sum\n      || cardAttr1 < minPoints\n      || cardAttr1 > maxPoints\n      || cardAttr2 < minPoints\n      || cardAttr2 > maxPoints\n      || cardAttr3 < minPoints\n      || cardAttr3 > maxPoints\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  enableSaveButton = () => {\n    if (this.checkFieldsNoEmpty() && this.checkValueAttrs()) {\n      return this.setState({ isSaveButtonDisabled: false });\n    }\n\n    return this.setState({ isSaveButtonDisabled: true });\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => this.enableSaveButton(),\n    );\n  }\n\n  onSaveButtonClick = () => {\n    const { hasTrunfo, cardsSaves, cardTrunfo, ...othersStates } = this.state;\n\n    this.setState((prevState) => ({\n      cardsSaves: [...prevState.cardsSaves, othersStates],\n      ...stateDefault,\n    }));\n\n    if (cardTrunfo) this.setState({ hasTrunfo: true });\n  };\n\n  onDeleteButtonClick = (cardToDel) => {\n    const { cardsSaves } = this.state;\n\n    const newState = cardsSaves.filter((card) => card !== cardToDel);\n\n    this.setState({\n      cardsSaves: newState,\n    });\n  }\n\n  render() {\n    const { cardsSaves, noDeleteBtn } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Tryunfo</h1>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Form\n              { ...this.state }\n              onInputChange={ this.onInputChange }\n              onSaveButtonClick={ this.onSaveButtonClick }\n            />\n          </div>\n          <div className=\"col-sm-6 preview\">\n            <Card { ...this.state } noDeleteBtn={ noDeleteBtn } />\n          </div>\n        </div>\n\n        <div className=\"row row-cols-1 row-cols-md-3 g-4 deck\">\n          { cardsSaves.map((card) => (\n            <div key={ card.cardName }>\n              <Card\n                { ...card }\n                noDeleteBtn={ !noDeleteBtn }\n                onDeleteButtonClick={ () => this.onDeleteButtonClick(card) }\n              />\n            </div>\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}